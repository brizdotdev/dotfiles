---
# Install basic applications that I need to use Windows

- name: Install Chrome
  win_chocolatey:
    name: googlechrome
    state: present

- name: Install Firefox
  win_chocolatey:
    name: firefox
    state: present
    install_args: /NoDesktopShortcut /RemoveDistributionDir

### Set Firefox as default browser using SetDefaultBrowser.exe
- name: Install SetDefaultBrowser
  win_chocolatey:
    name: setdefaultbrowser
    state: present

- name: Set Firefox as default browser
  ansible.windows.win_powershell:
    script: |
     SetDefaultBrowser.exe HKLM Firefox-308046B0AF4A39CB

- name: Install 7zip
  win_chocolatey:
    name: 7zip
    state: present

- name: Install VSCode
  win_chocolatey:
    name: vscode
    state: present

- name: Install mpv
  win_chocolatey:
    name: mpv
    state: present

- name: Set var for Windows path to dotfiles repo
  set_fact:
    dotfiles_repo_fullpath: "{{ lookup('env','DOTFILES_REPO_WIN') }}"

- name: Junction PowerToys settings
  ansible.windows.win_powershell:
    script: |
      $source = "$env:LocalAppData\Microsoft\PowerToys"
      $target  = "{{ dotfiles_repo_fullpath }}\win\config\PowerToys"
      $type = "Junction"
      $existing = Get-Item -Path $source -ErrorAction SilentlyContinue
      if ($?) {
        if ($existing.LinkType -eq $type)
        {
          $Ansible.Changed = $false
          exit
        }
        Remove-Item -Path $source
      }
      New-Item -ItemType Junction -Path "$source" -Target "$target"

- name: Install PowerToys
  win_chocolatey:
    name: powertoys
    state: present

- name: Install PowerShell Core
  win_chocolatey:
    name: powershell-core
    state: present

- name: Install Starship
  win_chocolatey:
    name: starship
    state: present

- name: Configure Starship
  ansible.windows.win_powershell:
    script: |
      $source = "$env:UserProfile\.config\starship.toml"
      $target = "{{ dotfiles_repo_fullpath }}\common\config\starship\starship.toml"
      $type = "HardLink"
      $existing = Get-Item -Path $source -ErrorAction SilentlyContinue
      if ($?) {
        if ($existing.LinkType -eq $type)
        {
          $Ansible.Changed = $false
          exit
        }
        Remove-Item -Path $source
      }
      mkdir.exe -p $env:UserProfile\.config
      New-Item -ItemType $type -Path "$source" -Target "$target"


- name: Configure PowerShell Core
  ansible.windows.win_powershell:
    script: |
      $source = "$env:UserProfile\Documents\PowerShell"
      $target = "{{ dotfiles_repo_fullpath }}\win\config\PowerShell"
      $type = "Junction"
      $existing = Get-Item -Path $source -ErrorAction SilentlyContinue
      if ($?) {
        if ($existing.LinkType -eq $type)
        {
          $Ansible.Changed = $false
          exit
        }
        Remove-Item -Path $source
      }
      New-Item -ItemType $type -Path "$source" -Target "$target"

- name: Install JetBrains Mono Nerd Font
  win_chocolatey:
    name: nerd-fonts-jetbrainsmono
    state: present

- name: Install Iosevka Nerd Font
  win_chocolatey:
    name: nerd-fonts-iosevka
    state: present

- name: Install Cascadia Code Nerd Font
  win_chocolatey:
    name: nerd-fonts-cascadiacode
    state: present

- name: Install Hack Nerd Font
  win_chocolatey:
    name: nerdfont-hack
    state: present

- name: Install Ubuntu Mono Nerd Font
  win_chocolatey:
    name: nerd-fonts-ubuntumono
    state: present

- name: Install Victor Mono Nerd Font
  win_chocolatey:
    name: nerd-fonts-victormono
    state: present
###

- name: Junction WindowsTerminal settings
  ansible.windows.win_powershell:
    script: |
      $source = "$env:LocalAppData\Packages\Microsoft.WindowsTerminal_8wekyb3d8bbwe\LocalState"
      $target = "{{ dotfiles_repo_fullpath }}\win\config\WindowsTerminal"
      $type = "Junction"
      $existing = Get-Item -Path $source -ErrorAction SilentlyContinue
      if ($?) {
        if ($existing.LinkType -eq $type)
        {
          $Ansible.Changed = $false
          exit
        }
        Remove-Item -Path $source
      }
      New-Item -ItemType $type -Path "$source" -Target "$target"

- name: HardLink git config
  ansible.windows.win_powershell:
    script: |
      $source = "$env:UserProfile\.gitconfig"
      $target = "{{ dotfiles_repo_fullpath }}\\common\\config\\git\\.gitconfig"
      $type = "HardLink"
      $existing = Get-Item -Path $source -ErrorAction SilentlyContinue
      if ($?) {
        if ($existing.LinkType -eq $type)
        {
          $Ansible.Changed = $false
          exit
        }
        Remove-Item -Path $source
      }
      New-Item -ItemType $type -Path "$source" -Target "$target"

- name: Install Delta
  win_chocolatey:
    name: delta
    state: present

# .gitconfig.local
# TODO: Test
- name: Configure git user
  community.windows.win_lineinfile:
    backrefs: yes
    regex: '^\[user\]'
    line: "[user]"
    path: "%UserProfile%\\.gitconfig.local"
    create: true

- name: Configure git user.name
  community.windows.win_lineinfile:
    regex: '^name ='
    backrefs: yes
    line: " name = {{ git_name }}"
    path: "%UserProfile%\\.gitconfig.local"
    create: true

- name: Configure git user.email
  community.windows.win_lineinfile:
    regex: '^email ='
    backrefs: yes
    line: " email = {{ git_email }}"
    path: "%UserProfile%\\.gitconfig.local"
    create: true
