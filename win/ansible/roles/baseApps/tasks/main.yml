---
# Install basic applications that I need to use Windows

- name: Install Chrome
  win_chocolatey:
    name: googlechrome
    state: present

- name: Install Firefox
  win_chocolatey:
    name: firefox
    state: present
    install_args: /NoDesktopShortcut /RemoveDistributionDir

### Set Firefox as default browser using SetDefaultBrowser.exe
- name: Install SetDefaultBrowser
  win_chocolatey:
    name: setdefaultbrowser
    state: present

- name: Set Firefox as default browser
  ansible.windows.win_powershell:
    script: |
     SetDefaultBrowser.exe HKLM Firefox-308046B0AF4A39CB

- name: Install 7zip
  win_chocolatey:
    name: 7zip
    state: present

- name: Install VSCode
  win_chocolatey:
    name: vscode
    state: present

- name: Install mpv
  win_chocolatey:
    name: mpv
    state: present

# TODO: Set mpv as default player
# "$env:ProgramData\chocolatey\lib\mpv.install\tools\mpv-install.bat"

- name: Set var for Windows path to dotfiles repo
  set_fact:
    dotfiles_repo_fullpath: "{{ lookup('env','DOTFILES_REPO_WIN') }}"


- name: Junction PowerToys settings
  ansible.windows.win_powershell:
    script: |
      $source = "$env:LocalAppData\Microsoft\PowerToys"
      $target  = "{{ dotfiles_repo_fullpath }}\win\config\PowerToys"
      New-Item -ItemType Junction -Path "$source" -Target "{{ dotfiles_repo_fullpath }}\win\config\PowerToys"

- name: Install PowerToys
  win_chocolatey:
    name: powertoys
    state: present

- name: Install PowerShell Core
  win_chocolatey:
    name: powershell-core
    state: present

- name: Configure PowerShell Core
  ansible.windows.win_powershell:
    script: |
      $source = "$env:UserProfile\Documents\PowerShell"
      $target = "{{ dotfiles_repo_fullpath }}\win\config\PowerShell"
      $existing = Get-Item -Path $source
      New-Item -ItemType Junction -Path "$source" -Target "$target"

# Install curl from scoop. Mainly to make sure scoop is installed
- name: Install curl
  community.windows.win_scoop:
    name: curl

### Install fonts. Windows Terminal config needs those
- name: Add the nerd-fonts bucket
  community.windows.win_scoop_bucket:
    name: nerd-fonts
    repo: https://github.com/matthewjberger/scoop-nerd-fonts

- name: Install JetBrains Mono Nerd Font
  community.windows.win_scoop:
    name: JetBrains-Mono

- name: Install Iosevka Nerd Font
  community.windows.win_scoop:
    name: Iosevka-NF

- name: Install Cascadia Code Nerd Font
  community.windows.win_scoop:
    name: CascadiaCode-NF

- name: Install Hack Nerd Font
  community.windows.win_scoop:
    name: Hack-NF

- name: Install Ubuntu Mono Nerd Font
  community.windows.win_scoop:
    name: Ubuntu-NF-Mono

- name: Install Victor Mono Nerd Font
  community.windows.win_scoop:
    name: VictorMono-NF
###

- name: Junction WindowsTerminal settings
  ansible.windows.win_powershell:
    script: |
      $settings = "$env:LocalAppData\Packages\Microsoft.WindowsTerminal_8wekyb3d8bbwe\LocalState"
      if (Test-Path $settings) {
          Remove-Item -Recurse $settings
      }
      New-Item -ItemType Junction -Path "$settings" -Target "{{ dotfiles_repo_fullpath }}\win\config\WindowsTerminal"

# git config
- name: Configure git user
  community.windows.win_lineinfile:
    regex: '^#\[user\]'
    backrefs: yes
    line: "[user]"
    path: '{{ dotfiles_repo_fullpath }}\\common\\config\\git\\.gitconfig'

- name: Configure git user.name
  community.windows.win_lineinfile:
    regex: '^# name ='
    backrefs: yes
    line: " name = {{ git_name }}"
    path: "{{ dotfiles_repo_fullpath }}\\common\\config\\git\\.gitconfig"

- name: Configure git user.email
  community.windows.win_lineinfile:
    regex: '^# email ='
    backrefs: yes
    line: " email = {{ git_email }}"
    path: "{{ dotfiles_repo_fullpath }}\\common\\config\\git\\.gitconfig"

- name: HardLink git config
  ansible.windows.win_powershell:
    script: |
      $source = "$env:UserProfile\.gitconfig"
      $target = "{{ dotfiles_repo_fullpath }}\\common\\config\\git\\.gitconfig"
      if (-Not (Test-Path $source)) {
        New-Item -ItemType HardLink -Path "$source" -Target "$target"
      }